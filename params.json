{"name":"AllanJS","body":"# Overview\r\n\r\nAllanJS is a Frequency Stability Analysis library for JavaScript. \r\n\r\nA gentle introduction to Frequency Stability Analysis is provided by [NIST Special Publication 1065](http://tf.nist.gov/timefreq/general/pdf/2220.pdf), written by [W.J. Riley](http://www.wriley.com).\r\n\r\n# Features\r\n\r\n## Data loading\r\n* Load phase or frequency data from an array.\r\n* Load phase or frequency data from file / URL.\r\n\r\n## Data preprocessing\r\n* Phase to frequency conversion.\r\n* Frequency to phase conversion.\r\n\r\n## Frequency Stability Measures\r\n* Maximum, minimum, mean and standard deviation for phase and frequency values based on averaging times (tau).\r\n* Original Allan deviation (**ADEV**).\r\n* Overlapping Allan deviation (**OADEV**).\r\n* Modified Allan deviation (**MDEV**).\r\n* Time deviation (**TDEV**).\r\n* Hadamard deviation (**HDEV**).\r\n* Overlapping Hadamard deviation (**OHDEV**).\r\n* Total deviation (**TOTDEV**).\r\n* Modified Total deviation (**MTOTDEV**).\r\n* Time Total deviation (**TTOTDEV**).\r\n* Hadamard Total deviation (**HTOTDEV**).\r\n\r\n## Plots\r\n* Phase data plot.\r\n* Frequency data plot.\r\n* **Sigma-tau** plots of Allan estimators.\r\n\r\n# Screenshots\r\n\r\n**Phase data plot:**\r\n\r\n![Phase](http://github.com/txipi/AllanJS/raw/master/screenshots/allanjs-phase.png)\r\n\r\n**Frequency data plot:**\r\n\r\n![Frequency](http://github.com/txipi/AllanJS/raw/master/screenshots/allanjs-frequency.png)\r\n\r\n**Sigma-tau plot:**\r\n\r\n![Sigma-tau](http://github.com/txipi/AllanJS/raw/master/screenshots/allanjs-sigmatau.png)\r\n\r\n# How to use it\r\n\r\nInclude AllanJS and Flot + jQuery:\r\n\r\n    <script language=\"javascript\" type=\"text/javascript\" src=\"js/jquery.min.js\"></script>\r\n    <script language=\"javascript\" type=\"text/javascript\" src=\"js/jquery.flot.min.js\"></script>\r\n    <script language=\"javascript\" type=\"text/javascript\" src=\"js/allan.js\"></script>\r\n\r\nPrepare a data array or file (one value per line):\r\n\r\n    var nbs = [ \r\n      8.920000000000000e+02, \r\n      8.090000000000000e+02,\r\n      8.230000000000000e+02,\r\n      7.980000000000000e+02,\r\n      6.710000000000000e+02,\r\n      6.440000000000000e+02,\r\n      8.830000000000000e+02,\r\n      9.030000000000000e+02,\r\n      6.770000000000000e+02 \r\n    ];\r\n\r\nCreate an AllanJS Dataset:\r\n\r\n    var allan1 = new Allan.Dataset('example 1');\r\n\r\nLoad data from array: \r\n\r\n    allan1.loadFreqFromArray(nbs);\r\n\r\nGet Allan deviation values for tau = 1, 2, 4:\r\n\r\n    console.log(allan1.getAdev(1), allan1.getAdev(2), allan1.getAdev(4));\r\n\r\nGet Hadamard deviation values for tau = 1, 2, 4:\r\n\r\n    console.log(allan1.getHdev(1), allan1.getHdev(2), allan1.getHdev(4));\r\n\r\nGenerate sigma-tau plot (it will be placed in a div with id='plot1'):\r\n\r\n    var plot1 = allan1.getSigmaTauPlot(['ADEV', 'HDEV']);\r\n\r\n    $.plot($('#plot1'), plot1.values, plot1.options);\r\n\r\n# Acknowledgements\r\n\r\nThis library is based on several Frequency Stability Analysis tools:\r\n* adev3, by **Tom Van Baak** [http://www.leapsecond.com/](http://www.leapsecond.com/).\r\n* allan, by **Magnus Danielson** [http://rubidium.dyndns.org/](http://rubidium.dyndns.org/).\r\n* Stable32, by **William J. Riley** [http://www.stable32.com/](http://www.stable32.com/).\r\n* TimeLab, by **John Miles** [http://www.ke5fx.com/](http://www.ke5fx.com/).\r\n\r\nPlots are created using Flot, a pure Javascript plotting library for jQuery, by **Ole Laursen** [http://code.google.com/p/flot/](http://code.google.com/p/flot/).\r\n\r\n# Download\r\n\r\nSource code available on GitHub: [https://github.com/txipi/AllanJS/downloads](https://github.com/txipi/AllanJS/downloads).","tagline":"Frequency Stability Analysis library for JavaScript","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}